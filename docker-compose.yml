version: '3.9'

volumes:
  postgres_data:

services:

  database_postgres:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mindmentor
      POSTGRES_DB: mindmentor
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql
    networks:
      - my_network

  auth_service:
    build:
      context: services/auth_service
      dockerfile: Dockerfile_Auth
    container_name: auth_service
    ports:
      - "8081:8081"
    depends_on:
      - database_postgres
    networks:
      - my_network

  emotions_service:
    build:
      context: services/emotions_service
      dockerfile: Dockerfile_Emotions
    container_name: emotions_service
    ports:
      - "8082:8082"
    depends_on:
      - database_postgres
    networks:
      - my_network

  meditation_service:
    build:
      context: services/meditation_service
      dockerfile: Dockerfile_Meditation
    container_name: meditation_service
    ports:
      - "8083:8083"
    depends_on:
      - database_postgres
    networks:
      - my_network

  profile_service:
    build:
      context: services/profile_service
      dockerfile: Dockerfile_Profile
    container_name: profile_service
    ports:
      - "8086:8086"
    depends_on:
      - database_postgres
    networks:
      - my_network

  social_service:
    build:
      context: services/social_service
      dockerfile: Dockerfile_Social
    container_name: social_service
    ports:
      - "8084:8084"
    depends_on:
      - database_postgres
    networks:
      - my_network

  trainings_service:
    build:
      context: services/trainings_service
      dockerfile: Dockerfile_Trainings
    container_name: trainings_service
    ports:
      - "8085:8085"
    depends_on:
      - database_postgres
    networks:
      - my_network

  api_gateway:
    build:
      context: api_gateway
      dockerfile: Dockerfile
    container_name: api_gateway
    ports:
      - "8090:8090"
    networks:
      - my_network
    depends_on:
      - auth_service
      - emotions_service
      - meditation_service
      - profile_service
      - social_service
      - trainings_service
      - database_postgres


#  frontend:
#    build:
#      context: front
#      dockerfile: Dockerfile_front
#    ports:
#      - "3000:3000"


networks:
  my_network:
    driver: bridge